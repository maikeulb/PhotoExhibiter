@using PhotoExhibiter.Features.Users
@using X.PagedList.Mvc.Core; 
@using X.PagedList;
@model Index.Model
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@if (Model.UpcomingExhibits.Any()) 
{
  <ul class="upcoming-exhibits exhibits mt-4">
    @foreach (var exhibit in Model.UpcomingExhibits)
    {
      <li>
        <div style="display:flex">
          <div class="date">
            <div class="month">
              @exhibit.DateTime.ToString("MMM")
            </div>
            <div class="day">
                @exhibit.DateTime.ToString("d ")
            </div>
          </div>
          <img class="img-thumbnail mx-2" style="height:100px;" src=@exhibit.ImageUrl>
          <div>
            <div>
              <b>@exhibit.Location</b>
            </div>
            <div>
              @exhibit.Genre.Name
            </div>
            @if (Model.UserId == Model.PhotographerId)
            {
              <div class="actions">
                <a asp-controller="Exhibits" asp-action="Edit" asp-route-id="@exhibit.Id"> 
                  Edit
                </a>
                <a href="#" class="js-cancel-exhibit"
                  data-exhibit-id="@exhibit.Id">
                  Cancel
                </a>
              </div>
             }
            else
            {
            <div>
              @if (Model.ShowActions && !exhibit.IsCanceled)
              {
                <button
                  data-exhibit-id="@exhibit.Id"
                  class="btn @(Model.Attendances.Any(a => a.ExhibitId == @exhibit.Id && a.AttendeeId == @Model.UserId) 
                  ? "btn-outline-info" 
                  : "btn-outline-secondary") btn-sm js-toggle-attendance">
                  @(Model.Attendances.Any(a => a.ExhibitId == @exhibit.Id && a.AttendeeId == @Model.UserId) 
                  ? "Attending"
                  : "Attend")
                </button>
              }
            </div>
             }
          </div>
        </div>
      </li>
    }
  </ul>
  <nav class="d-flex justify-content-center">
    @Html.PagedListPager( (IPagedList)Model.UpcomingExhibits, upcomingPage =>
    Url.Action("Index", new { UpcomingPage = upcomingPage }) )
  </nav>
}
else
{
<p class="mt-2"> No upcoming exhibits :( </p>
}
