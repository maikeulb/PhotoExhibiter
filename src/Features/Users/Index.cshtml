@using PhotoExhibiter.Features.Users
@model Index.Model

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@if (Model.UserId == Model.PhotographerId)
{
  <h1 class="text-center voffset3">My Exhibits</h1>
}
else
{
  <h1 class="text-center voffset3">@Model.PhotographerName's Exhibits</h1>
  <p class = "text-center">
    @if (User.Identity.IsAuthenticated)
    {
      if (Model.IsFollowing)
      {
        <button class="btn btn-outline-info btn-sm js-toggle-follow"
            data-user-id="@Model.PhotographerId">Following</button>
      }
      else
      {
        <button class="btn btn-outline-secondary btn-sm js-toggle-follow"
            data-user-id="@Model.PhotographerId">Follow</button>
      }
    }
  </p>
}

<section class="container">
  <ul id = "exhibits" class="exhibits voffset4">
    @foreach (var exhibit in Model.UpcomingExhibits)
    {
      <li>
        <div class="date">
          <div class="month">
            @exhibit.DateTime.ToString("MMM")
          </div>
          <div class="day">
              @exhibit.DateTime.ToString("d ")
          </div>
        </div>
        <div class="details">
          <span class="photographer">
            @exhibit.Location
          </span>
          <span class="genre">
            @exhibit.Genre.Name
          </span>
          @if (Model.UserId == Model.PhotographerId)
          {
            <div class="actions">
              <a href="@Url.Action("Edit", "Exhibits", new { Id = exhibit.Id })">
                Edit
              </a>
              <a href="#" class="js-cancel-exhibit"
                data-exhibit-id="@exhibit.Id">
                Cancel
              </a>
            </div>
           }
          <div>
          @if (Model.ShowActions && !exhibit.IsCanceled)
          {
            <button
              data-exhibit-id="@exhibit.Id"
              class="btn @(Model.Attendances.Any(a => a.ExhibitId == @exhibit.Id && a.AttendeeId == @Model.UserId) 
              ? "btn-outline-info" 
              : "btn-outline-secondary") btn-sm js-toggle-attendance">
              @(Model.Attendances.Any(a => a.ExhibitId == @exhibit.Id && a.AttendeeId == @Model.UserId) 
              ? "Attending"
              : "Attend")
            </button>
          }
          </div>
        </div>
      </li>
    }
  </ul>
</section>

@section search
{
  <form asp-controller="Exhibits" asp-action="Search">
    <div class="form-horizontal">
      <div id="searchexhibits" class="input-group">
        @Html.TextBoxFor(m => m.SearchTerm, new { @class = "form-control",
        placeholder = "Search by Photographer, Genre or Location..." })
        <button class="btn btn-outline-success" type="submit">Search</button>
      </div>
    </div>
  </form>
}

@section scripts
{
  <script type="text/javascript" src="~/exhibits.js"></script>
  <script type="text/javascript" src="~/exhibitCancel.js"></script>
  <script type="text/javascript" src="~/exhibitDetails.js"></script>
}
