@using PhotoExhibiter.Features.Users
@model Index.Model
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@if (Model.AttendingExhibits.Any()) 
{
  <ul class="upcoming-exhibits exhibits mt-4">
   @foreach (var exhibit in Model.AttendingExhibits)
   {
     <li>
       <div style="display:flex">
         <div class="date">
           <div class="month">
             @exhibit.DateTime.ToString("MMM")
           </div>
           <div class="day">
             @exhibit.DateTime.ToString("d ")
           </div>
         </div>
         <img class="img-thumbnail mx-2" style="height:100px;" src=@exhibit.ImageUrl>
         <div>
            <div>
              <b>@exhibit.Location</b>
            </div>
            <div>
              <a href="@Url.Action("Index", "Users", new { photographerId =
                exhibit.Photographer.Id })">
                @exhibit.Photographer.Name
              </a>
            </div>
            <div>
              @if (exhibit.IsCanceled)
              {
                <span class="label label-warning">Canceled</span>
              }
             @if (Model.ShowActions && !exhibit.IsCanceled)
             {
               <button
                 data-exhibit-id="@exhibit.Id"
                 class="btn @(Model.Attendances.Any(a => a.ExhibitId == @exhibit.Id && a.AttendeeId == @Model.UserId) 
                 ? "btn-outline-info" 
                 : "btn-outline-secondary") btn-sm js-toggle-attendance">
                 @(Model.Attendances.Any(a => a.ExhibitId == @exhibit.Id && a.AttendeeId == @Model.UserId) 
                 ? "Attending"
                 : "Attend")
               </button>
              }
            </div>
         </div>
       </div>
     </li>
    }
  </ul>
}
else
{
  <p> Attend some exhibits! </p>
}
